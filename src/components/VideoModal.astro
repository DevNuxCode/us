---
import AudioPlayer from './AudioPlayer.astro';

interface Props {
  id: number;
  date: string;
  content: string;
  name?: string;
  note?: string;
  bpm?: string;
  url?: string;
  estilo?: string;
  url_dk?: string;
  url_mp3?: string;
}

const { id,
        date,
        content,
        name,
        note,
        bpm,
        url,
        estilo,
        url_dk,
        url_mp3
             } = Astro.props;

const formattedDate = new Date(date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<div
  id={`modal-${id}`}
  class="fixed inset-0 z-50 hidden overflow-y-auto"
  aria-labelledby="modal-title"
  role="dialog"
  aria-modal="true"
>
  <div class="flex min-h-screen items-center justify-center p-4">
    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>
    
    <div class="relative transform overflow-hidden rounded-lg bg-white dark:bg-gray-800 px-4 pb-4 pt-5 text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6">
      <div class="absolute right-0 top-0 pr-4 pt-4">
        <button
          type="button"
          class="close-modal rounded-md bg-white dark:bg-gray-800 text-gray-400 hover:text-gray-500 focus:outline-none"
        >
          <span class="sr-only">Close</span>
          <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>
      
      <div class="sm:flex sm:items-start">
        
        <div class="mt-3 text-center sm:mt-0 sm:text-left w-full">
          <div class="space-y-4">
            {name && (
              <div class="text-lg font-semibold text-gray-900 dark:text-white">
                {name}
              </div>
            <div class="flex justify-between items-center">
              
              <span class="text-sm text-gray-500">{formattedDate}</span>
            </div>
           
            )}
            <div class="flex justify-between items-center text-sm text-gray-600 dark:text-gray-300">
          
             <span class="text-sm text-gray-500">Estilo: {estilo}</span>
           
             {note && <span>Escala: {note}</span>}
              {bpm && <span>BPM: {bpm}</span>}
            </div>


           




            <div class="mt-4 prose dark:prose-invert max-w-none" set:html={content} />
            {url && (
              <div class="mt-3">
                <a
                  href={url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex w-full justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
                >
                  Comprar Beat
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                  </svg>
                </a>

              </div>
                    <div class="mt-6">
                              <a
                  href={url_dk}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="inline-flex w-full justify-center items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-yellow-600 hover:bg-yello-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-yellow-500"
                >
                  Escuchar Beat
                  <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14" />
                  </svg>
                </a>

                      
                    </div>
                  


            )}
          </div>
         { url_mp3 && <AudioPlayer url_mp3={url_mp3} />} 
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  function setupModal(id: string) {
    const modal = document.getElementById(`modal-${id}`);
    const closeButton = modal?.querySelector('.close-modal');
    
    function closeModal() {
      modal?.classList.add('hidden');
      document.body.classList.remove('overflow-hidden');
    }
    
    closeButton?.addEventListener('click', closeModal);
    
    modal?.addEventListener('click', (e) => {
      if (e.target === modal) {
        closeModal();
      }
    });
    
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && !modal?.classList.contains('hidden')) {
        closeModal();
      }
    });
  }

  // Setup all modals on the page
  document.querySelectorAll('[id^="modal-"]').forEach((modal) => {
    const id = modal.id.replace('modal-', '');
    setupModal(id);
  });
</script>

